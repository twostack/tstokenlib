/*
  Copyright 2024 - Stephan M. February

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

import 'dart:typed_data';

import 'package:dartsv/dartsv.dart';

/**
 * The PP2 Lock builder is positioned as the third output of the token transaction.
 * It's primary purpose is to bridge the connection between the Sha256 output in fourth position,
 * and the Inductive Proof in PP1 (second token output).
 * PP2 will assert that all the witness outpoints spend from this transaction. In order to
 * do so it will perform an in-script rebuild of it's Sighash PreImage.
 *
 * Constructor Parameters :
 *
 *  fundingOutpoint - The outpoint that will fund the Witness Transaction
 *  witnessChangePKH - The Pubkey Hash to which the Witness output will be locked
 *  changeAmount   - The satoshi amount locked by the Witness' output
 */
class PP2LockBuilder extends LockingScriptBuilder{

  //DEBUG
  // String template = "0176018801a901ac5101402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c000000<outpoint><witnessChangePKH><witnessChangeAmount>615279567a75557a557a557a557a557a5179557a75547a547a547a547a0079547a75537a537a537a7575756104020000005d795154615179517951938000795179827751947f75007f77517a75517a75517a75617e5e795254615179517951938000795179827751947f75007f77517a75517a75517a75617e5f795254615179517951938000795179827751947f75007f77517a75517a75517a75617e567953797e52797e0079a8a8260079011879ac777777777777777777777777777777777777777777777777777777777777777705ffffffff0054615179517951938000795179827751947f75007f77517a75517a75517a7561007951797e51797ea8a800011179011179855c79610117790116797e01147e51797e0117797e0115797e517a75615c7958805179610079827700517902fd009f63517951615179517951938000795179827751947f75007f77517a75517a75517a7561517a75675179030000019f6301fd527952615179517951938000795179827751947f75007f77517a75517a75517a75617e517a756751790500000000019f6301fe527954615179517951938000795179827751947f75007f77517a75517a75517a75617e517a75675179090000000000000000019f6301ff527958615179517951938000795179827751947f75007f77517a75517a75517a75617e517a7568686868007953797e517a75517a75517a75617e527981007954805e795a797e57797e5c797e5979610079827700517902fd009f63517951615179517951938000795179827751947f75007f77517a75517a75517a7561517a75675179030000019f6301fd527952615179517951938000795179827751947f75007f77517a75517a75517a75617e517a756751790500000000019f6301fe527954615179517951938000795179827751947f75007f77517a75517a75517a75617e517a75675179090000000000000000019f6301ff527958615179517951938000795179827751947f75007f77517a75517a75517a75617e517a7568686868007953797e517a75517a75517a75617e5158807e58797e5379a8a87e567954807e51797e0079a8a80079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e810079011879210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce0810011979011e79011e798561537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a7561ab0079011879ac7777777777777777777777777777777777777777777777777777777777777777";

  //RELEASE
  String template = "0176018801a901ac5101402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c000000<outpoint><witnessChangePKH><witnessChangeAmount>5279567a757171557a78557a75547a547a547a547a76547a7572537a6d7504020000005d7951546e8b80767682778c7f75007f777777777e5e7952546e8b80767682778c7f75007f777777777e5f7952546e8b80767682778c7f75007f777777777e567953797e52797e76a8a82576011879ac777777777777777777777777777777777777777777777777777777777777777705ffffffff00546e8b80767682778c7f75007f7777777776767e787ea8a800011179011179855c790117790116797e01147e787e0117797e0115797e775c79588078768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e5279817654805e795a797e57797e5c797e5979768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e5158807e58797e5379a8a87e567954807e787e76a8a876517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e8176011879210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce0810011979011e79011e7985537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab76011879ac7777777777777777777777777777777777777777777777777777777777777777";

  List<int> _fundingOutpoint;
  List<int> _witnessChangePKH;
  int _changeAmount;

  PP2LockBuilder(this._fundingOutpoint, this._witnessChangePKH, this._changeAmount);

  @override
  SVScript getScriptPubkey() {

    var scriptHex = template
        .replaceFirst("<outpoint>", ScriptBuilder().addData(Uint8List.fromList(_fundingOutpoint)).build().toHex())
        .replaceFirst("<witnessChangePKH>", ScriptBuilder().addData(Uint8List.fromList(_witnessChangePKH)).build().toHex())
        .replaceFirst("<witnessChangeAmount>", ScriptBuilder().number(_changeAmount).build().toHex()) ;

        return SVScript.fromHex(scriptHex);
  }

  @override
  void parse(SVScript script) {
    // TODO: implement parse
  }}